{"version":3,"file":"radio-service.js","sources":["../src/index.js"],"sourcesContent":["import { Channel } from 'nextbone-radio'\r\nimport _ from 'underscore'\r\n\r\nconst resolved = Promise.resolve()\r\n\r\n/**\r\n * @class Service\r\n */\r\n\r\nexport class Service extends Channel {\r\n  constructor (channelName) {\r\n    super(channelName)\r\n    const start = _.once(() => resolved.then(() => this.start()))\r\n    const requests = this.constructor.requests\r\n    _.each(requests, (val, key) => {\r\n      this.reply(key, (...args) => {\r\n        const promise = start().then(() => this[val](...args))\r\n\r\n        promise.catch(err => {\r\n          this.onError(err)\r\n        })\r\n\r\n        return promise\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @method setup\r\n   */\r\n  setup () {}\r\n\r\n  /**\r\n   * @abstract\r\n   * @method start\r\n   */\r\n  start () {}\r\n\r\n  /**\r\n   * @abstract\r\n   * @method onError\r\n   */\r\n  onError () {}\r\n}\r\n"],"names":["resolved","Promise","resolve","Service","Channel","constructor","channelName","start","_","once","then","requests","each","val","key","reply","args","promise","catch","err","onError","setup"],"mappings":";;;AAGA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,OAAR,EAAjB;;;;;AAMA,AAAO,MAAMC,OAAN,SAAsBC,OAAtB,CAA8B;EACnCC,WAAW,CAAEC,WAAF,EAAe;UAClBA,WAAN;;UACMC,KAAK,GAAGC,CAAC,CAACC,IAAF,CAAO,MAAMT,QAAQ,CAACU,IAAT,CAAc,MAAM,KAAKH,KAAL,EAApB,CAAb,CAAd;;UACMI,QAAQ,GAAG,KAAKN,WAAL,CAAiBM,QAAlC;;IACAH,CAAC,CAACI,IAAF,CAAOD,QAAP,EAAiB,CAACE,GAAD,EAAMC,GAAN,KAAc;WACxBC,KAAL,CAAWD,GAAX,EAAgB,CAAC,GAAGE,IAAJ,KAAa;cACrBC,OAAO,GAAGV,KAAK,GAAGG,IAAR,CAAa,MAAM,KAAKG,GAAL,EAAU,GAAGG,IAAb,CAAnB,CAAhB;QAEAC,OAAO,CAACC,KAAR,CAAcC,GAAG,IAAI;eACdC,OAAL,CAAaD,GAAb;SADF;eAIOF,OAAP;OAPF;KADF;;;;;;;;EAgBFI,KAAK,GAAI;;;;;;;EAMTd,KAAK,GAAI;;;;;;;EAMTa,OAAO,GAAI;;;;;;"}